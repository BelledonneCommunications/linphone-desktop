#################################################
# VS2015
#################################################
#Wedo not need vs2015 anymore

#job-windows-vs2015:
#
#  extends: .job-prepare
#  stage: build
#  tags: [ "windows" ]
#  except:
#    refs:
#      - feature/peioMergeCi
#
#  except:
#    variables:
#      - $DEPLOY_RUN_ANDROID
#      - $DEPLOY_RUN_IOS
#  variables:
#    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO
#
#  script:
#    - mkdir build-desktop
#    - cd build-desktop
#    - cmake .. -G "Visual Studio 14 2015" -DLINPHONESDK_PLATFORM=Desktop -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS%
#   - cmake --build . --target sdk --config Release -- /maxcpucount

#job-windows-vs2015-novideo:
#
#  only:
#    - schedules
#  except:
#    variables:
#      - $DEPLOY_RUN_ANDROID
#      - $FAST_LINUX_TESTS
#  variables:
#    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
#  extends: job-windows-vs2015

.job-windows-vs2017:
  extends: .job-prepare
  stage: build
  tags: [ "windows" ]
  
  variables:
    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO -DENABLE_UNIT_TESTS=ON

  script:
    - IF EXIST build-desktop RMDIR /S /Q build-desktop
    - mkdir build-desktop
    - mkdir build-desktop/OUTPUT
#SDK Building
    - cd linphone-sdk
    #handling the case of previous job cancellation
    - IF EXIST build-sdkdesktop RMDIR /S /Q build-sdkdesktop
    - mkdir build-sdkdesktop
    - cd build-sdkdesktop    
    #we launch the msvc-cl wrapper located in python scripts folder
    #this wrapper relays only needed calls to the real compiler    
    #cache stats display
    - C:\PROGRA~1\Python37\Scripts\cl -s    
    - cmake .. -G "Visual Studio 15 2017" -DLINPHONESDK_PLATFORM=Desktop -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS%
    - cmake --build . --target sdk --config Release -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - C:\PROGRA~1\Python37\Scripts\cl -s
    - MOVE /Y linphone-sdk/desktop/*  ../../build-desktop/OUTPUT 
    - cd ../../submodules/externals/minizip    
# Minizip submodule Building
    - IF EXIST build-minizipdesktop RMDIR /S /Q build-minizipdesktop
    - mkdir -p build-minizipdesktop
    - cd build-minizipdesktop

    - C:\PROGRA~1\Python37\Scripts\cl -s    
    - cmake .. -G "Visual Studio 15 2017" -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS% -DCMAKE_INSTALL_PREFIX=../../../../build-desktop/OUTPUT
    - cmake --build . --target all --config Release -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - cmake --build . --target install --config Release -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - C:\PROGRA~1\Python37\Scripts\cl -s

# Desktop Building
    - cd ../../../../build-desktop
    - C:\PROGRA~1\Python37\Scripts\cl -s    
    - cmake .. -G "Visual Studio 15 2017" -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS% -DCMAKE_INSTALL_PREFIX=OUTPUT -DCMAKE_PREFIX_PATH=OUTPUT
    - cmake --build . --target all --config Release -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - cmake --build . --target install --config Release -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - C:\PROGRA~1\Python37\Scripts\cl -s

  artifacts:
    paths:
      - build-desktop\OUTPUT
    when: always
    expire_in: 60 minutes
            
.job-windows-vs2017-scheduled:
  extends: .job-windows-vs2017

  only:
    variables:
      - $NIGHTLY_MASTER
      - $NIGHTLY_RELEASE
      - $PACKAGE_RUN_WINDOWS
  before_script: 
    #cache disabled on scheduled builds since we dot not need the fastest build
    - set "CLCACHE_DISABLE=1"
    
    
job-windows-vs2017:
  extends: .job-windows-vs2017
  except:
    refs:
      - schedules
      
job-windows-vs2017-scheduled:
  extends: .job-windows-vs2017-scheduled
    
job-windows-vs2017-novideo:
  extends: .job-windows-vs2017-scheduled
  variables:
    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO -DENABLE_VIDEO=NO
    
